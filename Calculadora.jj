// ---------------------------------------------------------
// Exemplo 1
// - Reconhecer numero ( plus numero )*
// ---------------------------------------------------------

options {
      STATIC = false; /* os metodos e atributos nao devem ser est√°ticos */
}
PARSER_BEGIN(Somador)
      class Somador {
           static public void main( String[] args )
           throws ParseException, TokenMgrError {
                /* Estas classes serao geradas pelo JavaCC */
                Somador parser = new Somador( System.in ) ;
                parser.Start();
            }
      }
PARSER_END(Somador)

// ---------------------------------------------------------
// Lexico
// ---------------------------------------------------------

SKIP : { " "    /* Estes caracteres devem ser saltados */
       | "\t"
       }     
SKIP : { "\n"   /* Saltar tambem variantes sobre o "nova linha" */
       | "\r"
       | "\r\n" }

TOKEN : { < LAST : "$" > }  /* O caracter "(" para abre parenteses */
TOKEN : { < ABREPAR : "(" > }  /* O caracter "(" para abre parenteses */
TOKEN : { < FECHAPAR : ")" > }  /* O caracter ")" para fecha parenteses */
TOKEN : { < PLUS : "+" > }  /* O caracter "+" retorna o token PLUS */
TOKEN : { < MINUS : "-" > }  /* O caracter "-" retorna o token MINUS */
TOKEN : { < TIMES : "*" > }  /* O caracter "*" retorna o token TIMES */
TOKEN : { < DIVIDE : "/" > }  /* O caracter "/" retorna o token DIVIDE */
TOKEN : { < NUMBER : (["0"-"9"])+ | (["0"-"9"])+ "." (["0"-"9"])+ | (["0"-"9"])+ "." | "." (["0"-"9"])+ > }  /* Numero em ponto flutuante */
TOKEN : { < WORD : (["a"-"z"])+ | (["A"-"Z"])+ > }  /* Numero em ponto flutuante */
TOKEN : { < ABRECHAVE : "{" > }  /* O caracter ")" para fecha parenteses */
TOKEN : { < FECHACHAVE : "}" > }  /* O caracter ")" para fecha parenteses */


// EOF : Retornado pelo implicitamente

// ---------------------------------------------------------
// Sintatico
// ---------------------------------------------------------
void Start() :
{
}
{
      <WORD> <ABREPAR> <LAST> <WORD> <FECHAPAR> <ABRECHAVE> <WORD> <FECHACHAVE>
 


 <EOF>
}

